# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/rust/tags/
image: "rust:latest"

build:
  stage: build
  variables:
    # Clone submodules recursively
    GIT_SUBMODULE_STRATEGY: recursive

  before_script:
    # Install Go
    - pushd /tmp    
    - wget -qO- https://golang.org/dl/go1.14.7.linux-amd64.tar.gz | tar -xz
    - popd
    - export PATH=$PATH:/tmp/go/bin
    - go version

    # Install newt
    - source scripts/install-version.sh
    - pushd /tmp
    - git clone --branch $mynewt_version https://github.com/apache/mynewt-newt/
    - cd mynewt-newt/
    - ./build.sh
    - newt/newt version
    - popd
    - export PATH=$PATH:/tmp/mynewt-newt/newt
    - newt version

    # Download Mynewt source files
    # Ignore Error: Error updating "mcuboot": error: The following untracked working tree files would be overwritten by checkout:
    # ext/mbedtls/include/mbedtls/check_config.h
    # ext/mbedtls/include/mbedtls/config.h
    - export PATH=$PATH:/tmp/mynewt-newt/newt
    - newt install -v -f || ls -l repos
    #  Overwrite MCUBoot with newer version
    - source scripts/install-version.sh
    - pushd repos
    - rm -rf mcuboot
    - git clone --branch $mcuboot_version https://github.com/JuulLabs-OSS/mcuboot
    # git clone --branch $mynewt_version https://github.com/apache/mynewt-core
    # git clone --branch $nimble_version https://github.com/apache/mynewt-nimble
    - popd

    # Show files
    - set ; pwd ; ls -l

    #########################################################################################
    # Download and Cache Dependencies
    # Install Rust Target thumbv7em-none-eabihf
    - rustup default nightly
    - rustup target add thumbv7em-none-eabihf

    # Install Embedded Arm Toolchain arm-none-eabi-gcc
    - pushd /tmp
    - wget -qO- https://developer.arm.com/-/media/Files/downloads/gnu-rm/8-2019q3/RC1.1/gcc-arm-none-eabi-8-2019-q3-update-linux.tar.bz2 | tar -xj
    - popd
    - export PATH=$PATH:/tmp/gcc-arm-none-eabi-8-2019-q3-update/bin
    - arm-none-eabi-gcc --version

  script: |
    export PATH=$PATH:/tmp/go/bin:/tmp/mynewt-newt/newt:/tmp/gcc-arm-none-eabi-8-2019-q3-update/bin
    ./scripts/build-app.sh

  artifacts:
    paths:
      - bin

  # Cache outputs to reduce the build time
  cache:
    paths:
      - "*.o"
      - /tmp/go
      - /tmp/mynewt-newt
      - /tmp/gcc-arm-none-eabi-8-2019-q3-update

# run tests using the binary built before
test:
  stage: test
  script:
    - echo "Done!"
